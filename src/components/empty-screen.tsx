import { UseChatHelpers } from 'ai/react'

import { Button } from '@/components/ui/button'
import { ExternalLink } from '@/components/external-link'
import { IconArrowRight } from '@/components/ui/icons'

// Note - All example messages below have been generated by ChatGPT as synthetic data. No real-world data has been used.
const exampleMessages = [
  {
    heading: 'Securely sumarize a patient record in a hospital',
    message: `Summarize the following patient records into a paragraph to suggest which type of doctor to forward the patient to.

    Patient Record:

    \`\`\`
    First Name: John
    Last Name: Doe
    Gender: Male
    Date of Birth: 1982-08-07
    Nationality: American
    Residential Address: 5161 Sunset Lane, Peoria, IL 61616
    Phone Number: (309) 230-4795
    Email Address: johndoe82@gmail.com
    Occupation: Accountant
    Insurance Provider: Blue Cross Blue Shield
    Insurance Policy Number: BCBS4207896
    Marital Status: Married
    Emergency Contact: Jane Doe
    Emergency Contact Relationship: Wife
    Emergency Contact Number: (309) 230-4798

    Medical History:
    - Asthma (Chronic): Diagnosed in 1998
    - High Blood Pressure: Diagnosed in 2008
    - Broken Arm (Right): Healed in 2010

    Current Medications:
    - Ventolin (Asthma) - 2 puffs twice a day
    - Lisinopril (Blood Pressure) - 1 tablet daily

    Last Visit Date: 2021-11-12
    Visit Reason: Regular Check-up
    Doctor's Note: Patient's blood pressure higher than usual. Advised to decrease salt intake and monitor blood pressure at home.
    \`\`\`
    `
  },
  {
    heading: 'Ask it to lookup a revenue stats from credit card transaction history',
    message: `
    What is our total revenue for 2024

    \`\`\`
    1. Transaction ID: 001
    User Email: testuser1@gmail.com
    User Phone: +1-213-555-0123
    Credit Card Type: Visa
    Credit Card Number: 4242424242424242
    Credit Card Expiry: 02/24
    Amount: $100.00
    Transaction Status: Success
    Stripe Payment ID: ch_1JhZ0VGPR4hFd2H65ed3fg87

    2. Transaction ID: 002
    User Email: testuser2@hotmail.com
    User Phone: +1-213-555-0456
    Credit Card Type: MasterCard
    Credit Card Number: 5555-5555-5555-4444
    Credit Card Expiry: 01/23
    Amount: $250.00
    Transaction Status: Failure - Insufficient funds
    Stripe Payment ID: ch_1JhXVPGR4hFd2H624hh7kl89

    3. Transaction ID: 003
    User Email: jonnycache@gmail.com
    User Phone: +1-222-555-1111
    Credit Card Type: American Express
    Credit Card Number: 378282246310005
    Credit Card Expiry: 05/24
    Amount: $200.00
    Transaction Status: Success
    Stripe Payment ID: ch_1JhZ0VGPR4DDsdDSeddsfj3

    4. Transaction ID: 004
    User Email: bagels@hotmail.com
    User Phone: +1-213-555-0456
    Credit Card Type: MasterCard
    Credit Card Number: 5200 8282 8282 8210
    Credit Card Expiry: 03/24
    Amount: $250.00
    Transaction Status: Success
    Stripe Payment ID: ch_1JhXVPGR4hFd2H624hh7kl89
    \`\`\`
 `
  },
  {
    heading: 'Analyze a dataset with sensitive info securely',
    message: `Find the favorite ice cream flavor in the dataset.
\`\`\`
[
    {
        "Name": "John Doe",
        "Email": "johndoe@example.com",
        "Phone": "+1-234-567-8901",
        "FavoriteIceCream": "Vanilla"
    },
    {
        "Name": "Jane Smith",
        "Email": "janesmith@example.com",
        "Phone": "+1-234-567-8902",
        "FavoriteIceCream": "Coffee with Hazelnut"
    },
    {
        "Name": "Alice Johnson",
        "Email": "alicejohnson@example.com",
        "Phone": "+1-234-567-8903",
        "FavoriteIceCream": "Chocolate"
    },
    {
        "Name": "Bob Miller",
        "Email": "bobmiller@example.com",
        "Phone": "+1-234-567-8904",
        "FavoriteIceCream": "Chocolate"
    },
    {
        "Name": "Charlie Brown",
        "Email": "charliebrown@example.com",
        "Phone": "+1-234-567-8905",
        "FavoriteIceCream": "Chocolate"
    }
  ]
  \`\`\`
  `
  }
]

export function EmptyScreen({ setInput }: Pick<UseChatHelpers, 'setInput'>) {
  return (
    <div className="mx-auto max-w-2xl px-4">
      <div className="rounded-lg border bg-background p-8">
        <h1 className="mb-2 text-lg font-semibold">
          Welcome to Secure {process.env.NEXT_PUBLIC_CHOOSE_CHATBOT == "bedrock-llama" ? "Llama Chat ðŸ¦™" : "ChatGPT!"}
        </h1>
        <p className="mb-2 leading-normal text-muted-foreground">
          This is an open source AI chatbot app template built with ðŸ’œ using {' '}
      <ExternalLink href="https://nextjs.org">Next.js</ExternalLink>, {' '}
      <ExternalLink href="https://pangea.cloud/?utm_source=demos&utm_medium=footer&utm_campaign=secure-chatgpt">
        Pangea
      </ExternalLink> and {' '}
      {process.env.NEXT_PUBLIC_CHOOSE_CHATBOT == "bedrock-llama" ?
        <ExternalLink href="https://aws.amazon.com/bedrock/?ref=pangea.cloud">
          AWS Bedrock
        </ExternalLink>
        :
        <ExternalLink href="https://openai.com/?ref=pangea.cloud">
          OpenAI
        </ExternalLink>
      }
          .
        </p>
        <p className="leading-normal text-muted-foreground">
          You  can safely communicate securely with the chat bot:
        </p>
        <div className="mt-4 flex flex-col items-start space-y-2">
          {exampleMessages.map((message, index) => (
            <Button
              key={index}
              variant="link"
              className="h-auto p-0 text-base"
              onClick={() => setInput(message.message)}
            >
              <IconArrowRight className="mr-2 text-muted-foreground" />
              {message.heading}
            </Button>
          ))}
        </div>
      </div>
    </div>
  )
}
